{
	"name": "df_stg_json_to_synapse_seedesadv",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_edihome_json_seedesadv",
						"type": "DatasetReference"
					},
					"name": "JSONSeedesadv"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_stg_edidocumentheaderseedesadv",
						"type": "DatasetReference"
					},
					"name": "EDIDocumentHeader"
				},
				{
					"dataset": {
						"referenceName": "ds_stg_itemseedesadv",
						"type": "DatasetReference"
					},
					"name": "ItemSeedesadv"
				},
				{
					"dataset": {
						"referenceName": "ds_stg_msgseedesadv",
						"type": "DatasetReference"
					},
					"name": "MsgSeedesadv"
				},
				{
					"dataset": {
						"referenceName": "ds_stg_grpseedesadv",
						"type": "DatasetReference"
					},
					"name": "GrpSeedesadv"
				},
				{
					"dataset": {
						"referenceName": "ds_stg_asnseedesadv",
						"type": "DatasetReference"
					},
					"name": "AsnSeedesadv"
				}
			],
			"transformations": [
				{
					"name": "FlattenHeader"
				},
				{
					"name": "PivotProp"
				},
				{
					"name": "MapDrifted",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "FlattenItem"
				},
				{
					"name": "CastItem"
				},
				{
					"name": "FlattenMsgSeedesadv"
				},
				{
					"name": "CastMsgSeedesadv"
				},
				{
					"name": "CastHeader"
				},
				{
					"name": "FlattenGrp"
				},
				{
					"name": "CastGrp"
				},
				{
					"name": "SelectGrp"
				},
				{
					"name": "SelectAsn"
				},
				{
					"name": "SeedesadvRecordSK"
				}
			],
			"script": "parameters{\n\tDataFlowSourceFilePath as string\n}\nsource(output(\n\t\tprop as (k as string, v as string)[],\n\t\tseeag as (copyright as string, creationdate as string, message as string, mapping as string, version as string),\n\t\tcnt as (ic as (transmissiondate as string, transmissiontime as string, interchangecontrolnumber as string, sender as string, senderqualifier as string, reverseroutingaddress as string, receiver as string, receiverqualifier as string, routingaddress as string, testflag as string, receiverpassword as string, receiverpasswordqualifier as string, responserequired as string, applicationreference as string, processprio as string, communicationagreement as string, syntaxidentifier as string, syntaxversion as string, additionalinfo as string, ref as string), filterset as (key01 as string, key02 as string, key03 as string, key04 as string, key05 as string, key06 as string, key07 as string, key08 as string, key09 as string, key10 as string)[], grp as (fg as string, msg as (me as (messagenumber as string, messagetype as string, messagetypeversion as string, messagetyperelease as string, controllingagency as string, assocassignedcode as string, sequenceoftransfer as string, commonaccessreference as string, firstandlasttransfer as string, additionalinfo as string), transportdetails as (transportnumber as string, modeoftransport as string, additionaldetails as (qualifier as string, details as string)[], date as (qualifier as string, date as string, time as string, additionalinfo as string)[]), add as (qualifier as string, identifier as string, agencycode as string, name1 as string, name2 as string, name3 as string, name4 as string, name5 as string, partyname1 as string, partyname2 as string, partyname3 as string, partyname4 as string, partyname5 as string, street1 as string, street2 as string, street3 as string, street4 as string, pobox as string, city as string, state as string, postalcode as string, countrycode as string, country as string, additionaldata as (qualifier as string, data as string)[], contact as string, accountinformation as string, txt as string)[], weightandvolume as (netweight as string, grossweight as string, taraweight as string, unitofweight as string, length as string, width as string, height as string, measurementunit as string, volume as string, unitofvolume as string), qty as string, txt as string, amountdetails as string, currency as string, asn as (ref as (qualifier as string, reference as string, referencedate as string, referencetime as string, additionalinfo as string)[], date as (qualifier as string, date as string, time as string, additionalinfo as string)[], add as (qualifier as string, identifier as string, agencycode as string, name1 as string, name2 as string, name3 as string, name4 as string, name5 as string, partyname1 as string, partyname2 as string, partyname3 as string, partyname4 as string, partyname5 as string, street1 as string, street2 as string, street3 as string, street4 as string, pobox as string, city as string, state as string, postalcode as string, countrycode as string, country as string, additionaldata as string, contact as string, accountinformation as string, txt as string)[], weightandvolume as (netweight as string, grossweight as string, taraweight as string, unitofweight as string, length as string, width as string, height as string, measurementunit as string, volume as string, unitofvolume as string), qty as string, txt as string, amountdetails as string, currency as string, seeitem as (itempos as (lineitemnumber as string, linesubitemnumber as string, countryoforigin as string, itemdescription as string[]), itemnumber as (qualifier as string, itemnumber as string, additionalinfo as string)[], qty as (qualifier as string, quantity as string, quantityunit as string)[], amountdetails as string, ref as (qualifier as string, reference as string, referencedate as string, referencetime as string, additionalinfo as string)[], date as string, add as (qualifier as string, identifier as string, agencycode as string, name1 as string, name2 as string, name3 as string, name4 as string, name5 as string, partyname1 as string, partyname2 as string, partyname3 as string, partyname4 as string, partyname5 as string, street1 as string, street2 as string, street3 as string, street4 as string, pobox as string, city as string, state as string, postalcode as string, countrycode as string, country as string, additionaldata as string, contact as string, accountinformation as string, txt as string)[], weightandvolume as (netweight as string, grossweight as string, taraweight as string, unitofweight as string, length as string, width as string, height as string, measurementunit as string, volume as string, unitofvolume as string), txt as string, dangerousgoods as string, pac as ({_package} as (label as string, packagepartnumbercustomer as string, packagepartnumbersupplier as string, numberofpackages as string, packagenumberfrom as string, packagenumberto as string, batchnumber as string, quantityperpackage as string, quantityunit as string, accessory as string, weightandvolume as string, ref as (qualifier as string, reference as string, referencedate as string, referencetime as string, additionalinfo as string)[], date as string)[], pallet as string))[])[])[])[])[]\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true,\n\tmoveFiles: ['','cognitivesearch-seedesadv'],\n\trowUrlColumn: 'File_Name',\n\tdocumentForm: 'arrayOfDocuments',\n\twildcardPaths:[($DataFlowSourceFilePath)]) ~> JSONSeedesadv\nJSONSeedesadv foldDown(unroll(prop),\n\tmapColumn(\n\t\tFile_Name,\n\t\tprop_k = prop.k,\n\t\tprop_v = prop.v,\n\t\tseeag,\n\t\tcnt\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenHeader\nFlattenHeader pivot(groupBy(file_name = File_Name,\n\t\tseeag_copyright = toString(seeag.copyright),\n\t\tseeag_creationdate = toString(seeag.creationdate),\n\t\tseeag_meassage = toString(seeag.message),\n\t\tseeag_mapping = toString(seeag.mapping),\n\t\tseeag_version = toString(seeag.version),\n\t\tic_transmissiondate = replace(replace(replace(toString(cnt.ic.transmissiondate),'[',''),']',''),'\"',''),\n\t\tic_transmissiontime = replace(replace(replace(toString(cnt.ic.transmissiontime),'[',''),']',''),'\"',''),\n\t\tic_interchangecontrolnumber = replace(replace(replace(toString(cnt.ic.interchangecontrolnumber),'[',''),']',''),'\"',''),\n\t\tic_sender = replace(replace(replace(toString(cnt.ic.sender),'[',''),']',''),'\"',''),\n\t\tic_senderqualifier = replace(replace(replace(toString(cnt.ic.senderqualifier),'[',''),']',''),'\"',''),\n\t\tic_reverseroutingaddress = replace(replace(replace(toString(cnt.ic.reverseroutingaddress),'[',''),']',''),'\"',''),\n\t\tic_receiver = replace(replace(replace(toString(cnt.ic.receiver),'[',''),']',''),'\"',''),\n\t\tic_receiverqualifier = replace(replace(replace(toString(cnt.ic.receiverqualifier),'[',''),']',''),'\"',''),\n\t\tic_routingaddress = replace(replace(replace(toString(cnt.ic.routingaddress),'[',''),']',''),'\"',''),\n\t\tic_testflag = replace(replace(replace(toString(cnt.ic.testflag),'[',''),']',''),'\"',''),\n\t\tic_receiverpassword = replace(replace(replace(toString(cnt.ic.receiverpassword),'[',''),']',''),'\"',''),\n\t\tic_receiverpasswordqualifier = replace(replace(replace(toString(cnt.ic.receiverpasswordqualifier),'[',''),']',''),'\"',''),\n\t\tic_responserequired = replace(replace(replace(toString(cnt.ic.responserequired),'[',''),']',''),'\"',''),\n\t\tic_applicationreference = replace(replace(replace(toString(cnt.ic.applicationreference),'[',''),']',''),'\"',''),\n\t\tic_processprio = replace(replace(replace(toString(cnt.ic.processprio),'[',''),']',''),'\"',''),\n\t\tic_communicationagreement = replace(replace(replace(toString(cnt.ic.communicationagreement),'[',''),']',''),'\"',''),\n\t\tic_syntaxidentifier = replace(replace(replace(toString(cnt.ic.syntaxidentifier),'[',''),']',''),'\"',''),\n\t\tic_syntaxversion = replace(replace(replace(toString(cnt.ic.syntaxversion),'[',''),']',''),'\"',''),\n\t\tic_additionalinfo = replace(replace(replace(toString(cnt.ic.additionalinfo),'[',''),']',''),'\"',''),\n\t\tic_ref = toString(cnt.ic.ref),\n\t\tcnt_filterset = toString(cnt.filterset)),\n\tpivotBy(prop_k),\n\tprop_ = max(prop_v),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> PivotProp\nPivotProp derive(file_name = file_name,\n\t\tprop_mtprefix = toString(byName('prop_MT_PREFIX')),\n\t\tprop_trackid = toString(byName('prop_TRACKID')),\n\t\tprop_adapter = toString(byName('prop_ADAPTER')),\n\t\tprop_magnaplant = toString(byName('prop_MAGNAPLANT')),\n\t\tprop_partner = toString(byName('prop_PARTNER')),\n\t\tprop_docgroup = toString(byName('prop_DOCGROUP')),\n\t\tprop_doctype = toString(byName('prop_DOCTYPE')),\n\t\tprop_direction = toString(byName('prop_DIRECTION')),\n\t\tprop_start_time = toString(byName('prop_START_TIME'))) ~> MapDrifted\nJSONSeedesadv foldDown(unroll(cnt.grp.msg.asn.seeitem),\n\tmapColumn(\n\t\tFile_Name,\n\t\tme_messagenumber = cnt.grp.msg.me.messagenumber,\n\t\titempos_lineitemnumber = cnt.grp.msg.asn.seeitem.itempos.lineitemnumber,\n\t\titempos_linesubitemnumber = cnt.grp.msg.asn.seeitem.itempos.linesubitemnumber,\n\t\titempos_countryoforigin = cnt.grp.msg.asn.seeitem.itempos.countryoforigin,\n\t\titempos_itemdescription = cnt.grp.msg.asn.seeitem.itempos.itemdescription,\n\t\titem_itemnumber = cnt.grp.msg.asn.seeitem.itemnumber,\n\t\titem_qty = cnt.grp.msg.asn.seeitem.qty,\n\t\titem_amountdetails = cnt.grp.msg.asn.seeitem.amountdetails,\n\t\titem_ref = cnt.grp.msg.asn.seeitem.ref,\n\t\titem_date = cnt.grp.msg.asn.seeitem.date,\n\t\titem_add = cnt.grp.msg.asn.seeitem.add,\n\t\titem_weightandvolume = cnt.grp.msg.asn.seeitem.weightandvolume,\n\t\titem_txt = cnt.grp.msg.asn.seeitem.txt,\n\t\titem_dangerousgoods = cnt.grp.msg.asn.seeitem.dangerousgoods,\n\t\titem_pac_package = cnt.grp.msg.asn.seeitem.pac.{_package},\n\t\titem_pac_pallet = cnt.grp.msg.asn.seeitem.pac.pallet\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenItem\nFlattenItem derive(itempos_lineitemnumber = toString(itempos_lineitemnumber),\n\t\titempos_linesubitemnumber = toString(itempos_linesubitemnumber),\n\t\titempos_countryoforigin = toString(itempos_countryoforigin),\n\t\titempos_itemdescription = toString(array(itempos_itemdescription)),\n\t\titem_itemnumber = toString(array(item_itemnumber)),\n\t\titem_qty = toString(array(item_qty)),\n\t\titem_amountdetails = toString(array(item_amountdetails)),\n\t\titem_ref = toString(array(item_ref)),\n\t\titem_date = toString(array(item_date)),\n\t\titem_add = toString(array(item_add)),\n\t\titem_weightandvolume = toString(array(item_weightandvolume)),\n\t\titem_txt = toString(array(item_txt)),\n\t\titem_dangerousgoods = toString(array(item_dangerousgoods)),\n\t\titem_pac_package = toString(array(item_pac_package)),\n\t\titem_pac_pallet = toString(array(item_pac_pallet)),\n\t\tme_messagenumber = toString(me_messagenumber)) ~> CastItem\nJSONSeedesadv foldDown(unroll(cnt.grp.msg),\n\tmapColumn(\n\t\tFile_Name,\n\t\tme_messagenumber = cnt.grp.msg.me.messagenumber,\n\t\tme_messagetype = cnt.grp.msg.me.messagetype,\n\t\tme_messagetypeversion = cnt.grp.msg.me.messagetypeversion,\n\t\tme_messagetyperelease = cnt.grp.msg.me.messagetyperelease,\n\t\tme_controllingagency = cnt.grp.msg.me.controllingagency,\n\t\tme_assocassignedcode = cnt.grp.msg.me.assocassignedcode,\n\t\tme_commonaccessreference = cnt.grp.msg.me.commonaccessreference,\n\t\tme_sequenceoftransfer = cnt.grp.msg.me.sequenceoftransfer,\n\t\tme_firstandlasttransfer = cnt.grp.msg.me.firstandlasttransfer,\n\t\tme_additionalinfo = cnt.grp.msg.me.additionalinfo,\n\t\tmsg_transportdetails_transportnumber = cnt.grp.msg.transportdetails.transportnumber,\n\t\tmsg_transportdetails_modeoftransport = cnt.grp.msg.transportdetails.modeoftransport,\n\t\tmsg_transportdetails_additionaldetails = cnt.grp.msg.transportdetails.additionaldetails,\n\t\tmsg_transportdetails_date = cnt.grp.msg.transportdetails.date,\n\t\tmsg_add = cnt.grp.msg.add,\n\t\tmsg_weightandvolume = cnt.grp.msg.weightandvolume,\n\t\tmsg_qty = cnt.grp.msg.qty,\n\t\tmsg_txt = cnt.grp.msg.txt,\n\t\tmsg_amountdetails = cnt.grp.msg.amountdetails,\n\t\tmsg_currency = cnt.grp.msg.currency\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenMsgSeedesadv\nFlattenMsgSeedesadv derive(msg_transportdetails_additionaldetails = toString(array(msg_transportdetails_additionaldetails)),\n\t\tmsg_transportdetails_date = toString(array(msg_transportdetails_date)),\n\t\tmsg_add = toString(array(msg_add)),\n\t\tmsg_weightandvolume = toString(array(msg_weightandvolume)),\n\t\tmsg_qty = toString(array(msg_qty)),\n\t\tmsg_txt = toString(array(msg_txt)),\n\t\tmsg_amountdetails = toString(array(msg_amountdetails)),\n\t\tmsg_currency = toString(array(msg_currency)),\n\t\tme_messagetypeversion = toString(me_messagetypeversion),\n\t\tme_messagetyperelease = toString(me_messagetyperelease),\n\t\tmsg_transportdetails_transportnumber = toString(msg_transportdetails_transportnumber),\n\t\tmsg_transportdetails_modeoftransport = toString(msg_transportdetails_modeoftransport),\n\t\tme_messagenumber = toString(me_messagenumber)) ~> CastMsgSeedesadv\nMapDrifted derive(ic_ref = toString(array(ic_ref)),\n\t\tcnt_filterset = toString(array(cnt_filterset))) ~> CastHeader\nJSONSeedesadv foldDown(unroll(cnt.grp),\n\tmapColumn(\n\t\tFile_Name,\n\t\tme_messagenumber = cnt.grp.msg.me.messagenumber,\n\t\tgrp_fg = cnt.grp.fg,\n\t\tasn_ref = cnt.grp.msg.asn.ref,\n\t\tasn_date = cnt.grp.msg.asn.date,\n\t\tasn_add = cnt.grp.msg.asn.add,\n\t\tasn_weightandvolume = cnt.grp.msg.asn.weightandvolume,\n\t\tasn_qty = cnt.grp.msg.asn.qty,\n\t\tasn_txt = cnt.grp.msg.asn.txt,\n\t\tasn_amountdetails = cnt.grp.msg.asn.amountdetails,\n\t\tasn_currency = cnt.grp.msg.asn.currency\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenGrp\nFlattenGrp derive(me_messagenumber = toString(me_messagenumber),\n\t\tgrp_fg = toString(array(grp_fg)),\n\t\tasn_ref = toString(array(asn_ref)),\n\t\tasn_date = toString(array(asn_date)),\n\t\tasn_add = toString(array(asn_add)),\n\t\tasn_weightandvolume = toString(array(asn_weightandvolume)),\n\t\tasn_qty = toString(array(asn_qty)),\n\t\tasn_txt = toString(array(asn_txt)),\n\t\tasn_amountdetails = toString(array(asn_amountdetails)),\n\t\tasn_currency = toString(array(asn_currency))) ~> CastGrp\nCastGrp select(mapColumn(\n\t\tFile_Name,\n\t\tgrp_fg\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectGrp\nCastGrp select(mapColumn(\n\t\tFile_Name,\n\t\tme_messagenumber,\n\t\tasn_ref,\n\t\tasn_date,\n\t\tasn_add,\n\t\tasn_weightandvolume,\n\t\tasn_qty,\n\t\tasn_txt,\n\t\tasn_amountdetails,\n\t\tasn_currency\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAsn\nCastMsgSeedesadv keyGenerate(output(SeedesadvRecordSK as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> SeedesadvRecordSK\nCastHeader sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tFile_Name as string,\n\t\tProp_MtPrefix as string,\n\t\tProp_Trackid as string,\n\t\tProp_Adapter as string,\n\t\tProp_Magnaplant as string,\n\t\tProp_Partner as string,\n\t\tProp_Docgroup as string,\n\t\tProp_Doctype as string,\n\t\tProp_Direction as string,\n\t\tProp_StartTime as string,\n\t\tSeeag_Copyright as string,\n\t\tSeeag_CreationDate as string,\n\t\tSeeag_Message as string,\n\t\tSeeag_Mapping as string,\n\t\tSeeag_Version as string,\n\t\tIc_TransmissionDate as string,\n\t\tIc_TransmissionTime as string,\n\t\tIc_InterchangeControlNumber as string,\n\t\tIc_Sender as string,\n\t\tIc_SenderQualifier as string,\n\t\tIc_ReverseRoutingAddress as string,\n\t\tIc_Receiver as string,\n\t\tIc_ReceiverQualifier as string,\n\t\tIc_RoutingAddress as string,\n\t\tIc_Testflag as string,\n\t\tIc_ReceiverPassword as string,\n\t\tIc_ReceiverPasswordQualifier as string,\n\t\tIc_ResponseRequired as string,\n\t\tIc_ApplicationReference as string,\n\t\tIc_ProcessPrio as string,\n\t\tIc_CommunicationAgreement as string,\n\t\tIc_SyntaxIdentifier as string,\n\t\tIc_SyntaxVersion as string,\n\t\tIc_AdditionalInfo as string,\n\t\tIc_Ref as string,\n\t\tIc_FilterSet as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 0,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFile_Name = file_name,\n\t\tProp_MtPrefix = prop_mtprefix,\n\t\tProp_Trackid = prop_trackid,\n\t\tProp_Adapter = prop_adapter,\n\t\tProp_Magnaplant = prop_magnaplant,\n\t\tProp_Partner = prop_partner,\n\t\tProp_Docgroup = prop_docgroup,\n\t\tProp_Doctype = prop_doctype,\n\t\tProp_Direction = prop_direction,\n\t\tProp_StartTime = prop_start_time,\n\t\tSeeag_Copyright = seeag_copyright,\n\t\tSeeag_CreationDate = seeag_creationdate,\n\t\tSeeag_Message = seeag_meassage,\n\t\tSeeag_Mapping = seeag_mapping,\n\t\tSeeag_Version = seeag_version,\n\t\tIc_TransmissionDate = ic_transmissiondate,\n\t\tIc_TransmissionTime = ic_transmissiontime,\n\t\tIc_InterchangeControlNumber = ic_interchangecontrolnumber,\n\t\tIc_Sender = ic_sender,\n\t\tIc_SenderQualifier = ic_senderqualifier,\n\t\tIc_ReverseRoutingAddress = ic_reverseroutingaddress,\n\t\tIc_Receiver = ic_receiver,\n\t\tIc_ReceiverQualifier = ic_receiverqualifier,\n\t\tIc_RoutingAddress = ic_routingaddress,\n\t\tIc_Testflag = ic_testflag,\n\t\tIc_ReceiverPassword = ic_receiverpassword,\n\t\tIc_ReceiverPasswordQualifier = ic_receiverpasswordqualifier,\n\t\tIc_ResponseRequired = ic_responserequired,\n\t\tIc_ApplicationReference = ic_applicationreference,\n\t\tIc_ProcessPrio = ic_processprio,\n\t\tIc_CommunicationAgreement = ic_communicationagreement,\n\t\tIc_SyntaxIdentifier = ic_syntaxidentifier,\n\t\tIc_SyntaxVersion = ic_syntaxversion,\n\t\tIc_AdditionalInfo = ic_additionalinfo,\n\t\tIc_Ref = ic_ref\n\t)) ~> EDIDocumentHeader\nCastItem sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tFile_Name as string,\n\t\tMe_MessageNumber as string,\n\t\tItemPos_LineItemNumber as string,\n\t\tItemPos_LineSubItemNumber as string,\n\t\tItemPos_CountryOfOrigin as string,\n\t\tItemPos_ItemDescription as string,\n\t\tItem_ItemNumber as string,\n\t\tItem_Qty as string,\n\t\tItem_AmountDetails as string,\n\t\tItem_Ref as string,\n\t\tItem_Date as string,\n\t\tItem_Add as string,\n\t\tItem_WeightAndVolume as string,\n\t\tItem_Txt as string,\n\t\tItem_DangerousGoods as string,\n\t\tItem_Pac_Package as string,\n\t\tItem_Pac_Pallet as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFile_Name,\n\t\tMe_MessageNumber = me_messagenumber,\n\t\tItemPos_LineItemNumber = itempos_lineitemnumber,\n\t\tItemPos_LineSubItemNumber = itempos_linesubitemnumber,\n\t\tItemPos_CountryOfOrigin = itempos_countryoforigin,\n\t\tItemPos_ItemDescription = itempos_itemdescription,\n\t\tItem_ItemNumber = item_itemnumber,\n\t\tItem_Qty = item_qty,\n\t\tItem_AmountDetails = item_amountdetails,\n\t\tItem_Ref = item_ref,\n\t\tItem_Date = item_date,\n\t\tItem_Add = item_add,\n\t\tItem_WeightAndVolume = item_weightandvolume,\n\t\tItem_Txt = item_txt,\n\t\tItem_DangerousGoods = item_dangerousgoods,\n\t\tItem_Pac_Package = item_pac_package,\n\t\tItem_Pac_Pallet = item_pac_pallet\n\t)) ~> ItemSeedesadv\nSeedesadvRecordSK sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tFile_Name as string,\n\t\tMe_MessageNumber as string,\n\t\tMe_MessageType as string,\n\t\tMe_MessageTypeVersion as string,\n\t\tMe_MessageTypeRelease as string,\n\t\tMe_ControllingAgency as string,\n\t\tMe_AssocAssignedCode as string,\n\t\tMe_CommonAccessReference as string,\n\t\tMe_SequenceOfTransfer as string,\n\t\tMe_FirstAndLastTransfer as string,\n\t\tMe_AdditionalInfo as string,\n\t\tMsg_TransportDetails_TransportNumber as string,\n\t\tMsg_TransportDetails_ModeOfTransport as string,\n\t\tMsg_TransportDetails_ShippingMode as string,\n\t\tMsg_TransportDetails_AdditionalDetails as string,\n\t\tMsg_TransportDetails_Date as string,\n\t\tMsg_Add as string,\n\t\tMsg_WeightAndVolume as string,\n\t\tMsg_Qty as string,\n\t\tMsg_Txt as string,\n\t\tMsg_AmountDetails as string,\n\t\tMsg_Currency as string,\n\t\tSeedesadvRecordSK as long\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFile_Name,\n\t\tMe_MessageNumber = me_messagenumber,\n\t\tMe_MessageType = me_messagetype,\n\t\tMe_MessageTypeVersion = me_messagetypeversion,\n\t\tMe_MessageTypeRelease = me_messagetyperelease,\n\t\tMe_ControllingAgency = me_controllingagency,\n\t\tMe_AssocAssignedCode = me_assocassignedcode,\n\t\tMe_CommonAccessReference = me_commonaccessreference,\n\t\tMe_SequenceOfTransfer = me_sequenceoftransfer,\n\t\tMe_FirstAndLastTransfer = me_firstandlasttransfer,\n\t\tMe_AdditionalInfo = me_additionalinfo,\n\t\tMsg_TransportDetails_TransportNumber = msg_transportdetails_transportnumber,\n\t\tMsg_TransportDetails_ModeOfTransport = msg_transportdetails_modeoftransport,\n\t\tMsg_TransportDetails_AdditionalDetails = msg_transportdetails_additionaldetails,\n\t\tMsg_TransportDetails_Date = msg_transportdetails_date,\n\t\tMsg_Add = msg_add,\n\t\tMsg_WeightAndVolume = msg_weightandvolume,\n\t\tMsg_Qty = msg_qty,\n\t\tMsg_Txt = msg_txt,\n\t\tMsg_AmountDetails = msg_amountdetails,\n\t\tMsg_Currency = msg_currency,\n\t\tSeedesadvRecordSK\n\t)) ~> MsgSeedesadv\nSelectGrp sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tFile_Name as string,\n\t\tGrp_Fg as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFile_Name,\n\t\tGrp_Fg = grp_fg\n\t)) ~> GrpSeedesadv\nSelectAsn sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tFile_Name as string,\n\t\tAsn_Ref as string,\n\t\tAsn_Date as string,\n\t\tAsn_Add as string,\n\t\tAsn_WeightAndVolume as string,\n\t\tAsn_Qty as string,\n\t\tAsn_Txt as string,\n\t\tAsn_AmountDetails as string,\n\t\tAsn_Currency as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFile_Name,\n\t\tAsn_Ref = asn_ref,\n\t\tAsn_Date = asn_date,\n\t\tAsn_Add = asn_add,\n\t\tAsn_WeightAndVolume = asn_weightandvolume,\n\t\tAsn_Qty = asn_qty,\n\t\tAsn_Txt = asn_txt,\n\t\tAsn_AmountDetails = asn_amountdetails,\n\t\tAsn_Currency = asn_currency\n\t)) ~> AsnSeedesadv"
		}
	}
}